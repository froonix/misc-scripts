#!/bin/bash
set -euf -o pipefail

function stderr
{
	echo "$@" 1>&2
}

function error
{
	local var

	for var in "$@"
	do
		stderr "$var"
	done

	exit 1
}

function cleanup
{
	rm -f "$tmp"
}

# URL-encode path but preserve slashes.
# And remove prefixed ../, ./ or / strings.
# See: https://gist.github.com/1163649
function encode_path
{
	local -i l
	local s

	s=$(sed -r 's#^[.]{0,2}/##;s#[/]{2,}#/#g' <<< "$1")
	l=${#s}

	for (( i = 0; i < l; i++ ))
	do
		local c="${s:i:1}"

		case "$c" in
			[a-zA-Z0-9/.~_-]) printf '%s' "$c" ;;
			*) printf '%%%02X' "'$c" ;;
		esac
	done
}


if [[ "$#" -lt 2 || ! -e "$1" ]]
then
	error "Usage: $(basename "$0") <DIR> <URL>" \
	      "" \
	      "Uploads DIR recursively to Nextcloud URL." \
	      "URL should be a password-protected share." \
	      "" \
	      "Example: https://token:password@example.net/public.php/webdav"
fi

DIR="$1"
URL="$2"

curl -s -f -X PROPFIND "$URL/" >/dev/null \
|| error "Fatal error: URL check failed!" \
         "Maybe wrong token/password?"

trap cleanup EXIT
tmp=$(mktemp)

start=$(dirname "$DIR")
echo -n "[    ] $start "

if [[ -f "$DIR" ]]
then encode_path "$start/" > "$tmp"
else encode_path "$DIR/" > "$tmp"
fi

full=""
while IFS= read -r -d '/' dir
do
	full+="$dir/"

	if ! curl -s -f -X MKCOL "$URL/$full" >/dev/null \
	&& ! curl -s -f -X PROPFIND "$URL/$full" >/dev/null
	then
		echo -e "\r[\e[41mFAIL\e[0m]"
		error "" "Error: Could not create start directory $full!"
	fi
done < "$tmp"

echo -n -e "\r[\e[32m OK \e[0m]"
echo " $start "
unset start full dir

find "$DIR" -xdev \( -type d -o -type f \) -print0 > "$tmp"

declare -i f=0
while IFS= read -r -d '' file
do
	if [[ ! -e "$file" ]]
	then
		continue
	fi

	cfile=$(encode_path "$file")
	echo -n "[    ] $file "

	if [[ -f "$file" ]]
	then
		if ! curl -s -f -T "$file" -H "X-OC-Mtime: $(stat -c %Y "$file")" "$URL/$cfile" >/dev/null \
		&& ! curl -s -f -X PROPFIND "$URL/$cfile" >/dev/null
		then
			echo -n -e "\r[\e[41mFAIL\e[0m]"
			echo " $file "
			((f++)) ||:
			continue
		fi
	else
		if ! curl -s -f -X MKCOL "$URL/$cfile" >/dev/null \
		&& ! curl -s -f -X PROPFIND "$URL/$cfile" >/dev/null
		then
			echo -e "\r[\e[41mFAIL\e[0m]"
			error "" "Error: Could not create directory $file!"
		fi
	fi

	echo -n -e "\r[\e[32m OK \e[0m]"
	echo " $file "
done < "$tmp"

if [[ "$f" -gt 0 ]]
then
	error "" "Warning: $f files failed!"
fi
